# Generated by Django 4.2.10 on 2024-02-15 00:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('collect', models.IntegerField(default=0, help_text='Set to 1 to collect data for this plant.')),
                ('status', models.IntegerField(default=0)),
                ('api_endpoint', models.URLField(default='http://example.com', help_text='The base URL for the API endpoint.')),
                ('api_method', models.CharField(default='GET', help_text='The HTTP method (e.g., GET, POST).', max_length=10)),
                ('api_auth_type', models.CharField(blank=True, default='', help_text='The type of authentication (e.g., Token, Basic).', max_length=50, null=True)),
                ('api_auth_key', models.CharField(blank=True, default='', help_text='The authentication key or token.', max_length=255, null=True)),
                ('api_param_name', models.CharField(blank=True, default='', help_text='The name of the primary query parameter.', max_length=100, null=True)),
                ('api_param_value', models.CharField(blank=True, default='', help_text='The value of the primary query parameter.', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_field', models.CharField(help_text='Dot-notated path to the field in the API response, e.g., "main.temp" for {"main": {"temp": value}}.', max_length=100)),
                ('condition_type', models.CharField(choices=[('gt', 'Greater Than'), ('lt', 'Less Than')], help_text='Type of condition to evaluate.', max_length=20)),
                ('condition_value', models.FloatField(help_text='The value to compare the api_field against.')),
                ('script', models.TextField(help_text='The script or action to trigger when the condition is met.')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='picks', to='garden.plant')),
            ],
        ),
    ]
